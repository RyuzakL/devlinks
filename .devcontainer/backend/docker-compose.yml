services:
  db:
    image: postgres:16-alpine
    env_file:
      - .env         
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend: 
    build:
      context: ../../backend
      dockerfile: ../.devcontainer/backend/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "4000:4000"
    volumes:         # Hot-reload côté host ↔ container
      - ../../backend:/app
      - /app/node_modules  # empêche l’écrasement par le volume host

volumes:
  db-data:
